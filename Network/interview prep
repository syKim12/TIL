### OSI 7계층:

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/fc58bd7e-c599-4702-83cd-77089740b9f8/Untitled.png)

- 인터넷 환경에서 통신하기 위해 네트워킹에 대한 표준을 7계층으로 나눈 것
- 나눈 이유: 통신이 일어나는 과정을 단계적으로 파악하기 위해
- 쉽게 외우는 법: **P**lease **D**(o)**N**’**T SPA**

- 응용 계층: ex. 카카오톡 프로그램
- 표현 계층: 주고 받는 인터페이스, 규격을 맞춰줌
- 세션 계층: 통신을 관리
- 전송 게층: 연결 한 뒤 데이터를 주고 받음
- 네트워크 계층: IP 주소 등을 통해 찾음
- 데이터 링크 계층: 네트워크 기기에서 어떻게 통신이 일어나는지 알아보는 것
- 물리 계층: 전선으로 신호가 오가는 것

### TCP, UDP

- TCP: 신뢰성 높은 프로토콜 (상대방이 받았는지 확인 가능)
    - 느림, 신뢰성 높음
    - 보내는 사람과 받는 사람의 연결 과정,,,
    - 3 way handshaking을 통해 연결 설정과 4 way handshaking을 통한 연결 해제
    - 흐름제어와 혼잡제어
        - 흐름 제어: sender가 너무 많이 보낼때 받는 사람의 상황을 인지한 채로 적당한 양을 보내주는 것
        - 혼잡제어: 데이터 전송이 잘 안되는 경우,,,하나가 꼬이면 다 꼬이기 시작한다. 네트워크 안에는 몇개의 메시지만 돌아다닐 수 있도록,,, 너무 혼잡하지 않게 패킷수가 과도하게 증가하는 것 방지
    - 일 대 일만 가능
- UDP: 빠른 프로토콜
    - 빠름, 신뢰성 낮음
    - 연결이 이루어지지 않기 때문에 빠르다
    - 손상된 데이터에 대해 재전송하지 않음
    - 실시간 스트리밍 등에 유용함
    - 일 대 일, 일 대 다, 다 대 다 가능
    
    [https://shjz.tistory.com/98](https://shjz.tistory.com/98)
    

### IP란?

- internet protocol
- 인터넷에서 데이터 전달 프로토콜
- 호스트 통신할때 호스트의 주소를 알아내는 역할이 IP address
- 통신 중간 중간에 라우터가 있어서 라우터를 통해 IP 주소를 통해서 연결함

********특징********

- 비신뢰성: IP는 프로토콜일 뿐이고 데이터 흐름에 관여하지 않기 때문에 보낸 패킷이 제대로 갔는지 보장 x
    - 전송이 잘 됐는지 확인하기 위해 ICMP를 이용할 수 있다
- 비연결성: 패킷을 받는 대상이 연결상태임을 확인하지 않고 전송
    - 단점: 서비스 불능 상태여도 패킷을 전송

인터넷 프로토콜 약자로, 인터넷망을 통해 패킷을 전달하는 프로토콜

### DNS

- 도메인 주소를 ip 주소로 변환해주는 시스템
- ISP가 DNS 해석기를 관리
- EX. [naver.com](http://naver.com) → 172.168.

![[https://222tistory.tistory.com/80](https://222tistory.tistory.com/80)](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/06723065-0c83-40d4-aaf3-16c120dfe843/Untitled.png)

[https://222tistory.tistory.com/80](https://222tistory.tistory.com/80)

- 예를 들어 [www.naver.com](http://www.naver.com) 이 있다면 com 먼저  찾는다. 그 뒤로 naver를 찾는다. 즉 뒤에서 부터 찾는다.

**********정리:********** DNS는 ********************도메인 주소를 ip 주소로 변환해준다. URL을 입력하면 ISP가 관리하는 DNS 해석기에 요청을 라우팅 시킨다. DNS해석기라 루트 서버에 TOP LEVEL의 서버 주소를 요청, 그 다음 TOP LEVEL에서 SECOND LEVEL, second level에서 sub dns sever 이렇게 해서 최종적으로 ip 주소를 얻게 된다.

### 로드밸런서

- 서버의 부하를 분산시켜주는 시스템
- 여러개의 서버로 로드를 분산시켜준다
- L4 (osi 7 계층의 4계층)
    
    ![[https://deveric.tistory.com/91](https://deveric.tistory.com/91)](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/e0f4776b-dfbe-4556-90ce-7c28115c914d/Untitled.png)
    
    [https://deveric.tistory.com/91](https://deveric.tistory.com/91)
    
    - transport 계층을 사용, port 기반 부하 분산 → tcp, udp
- **L7 (osi 7계층의 7계층)**
    - application 계층을 사용, 요청(URL) 기반 부하 분산 → HTTP, HTTPS 등
    - 디도스를 방어할 수 있음
        - 디도스 공격: 계속 요청을 보내는 (예를 들어 계속 새로고침 하는) 공격. 계속 한다면 과부하가 걸려 서버가 에러가 날 수 있음
        - 디도스와 같은 비정상적인 트래픽을 막을 수 있음
- 네트워크가 든 기기, 예를 들어 핸드폰 등은 모두 고유의 mac 주소(2계층) 를 가지고 있다. 내 위치를 알려주는 ip 주소(3계층)는 바뀔 수 있다. 포트(4계층)

정리: 서버의 부하를 분산시켜주는 시스템. L4와 L7 로드밸런서. L4는 4계층 이하의 정보를 가지고 로드를 분산. mac 주소, ip, 포트를 통해 트래픽 분산. L7는 응용 계층의 정보를 가지고 분산. 패킷 내용을 확인하고 분산해서 디도스 같은 비정상적인 트래픽도 필터링 가능 

출처: [https://www.youtube.com/watch?v=JOwZ9YEAMrY&list=PLFS4XA5uEUIRi5wURgqYXBPqKCnAB12TQ&index=11](https://www.youtube.com/watch?v=JOwZ9YEAMrY&list=PLFS4XA5uEUIRi5wURgqYXBPqKCnAB12TQ&index=11)
