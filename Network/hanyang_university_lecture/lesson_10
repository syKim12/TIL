# 10차시

outline

application layer: http, message

transportation: tcp/udp, 단위는 세그먼트

network: IP, 패킷

link: frame

ipv4

- 32비트 주소 체계
- 8비트씩 끊어서 읽는다.
- IP주소는 호스트에 들어있는 네트워크 인터페이스 자체를 지칭한다.
- 네트워크 인터페이스 카드를 여러개 꽂으면 여러개의 IP주소를 가질 수 있다.
- (라우터는 네트워크 인터페이스 여러개를 가진다.)

주소 지정 방식

- 라우터 안의 포워딩 테이블이 커지는 것을 방지하기 위해 마구잡이로 배정되지 않고 계층화를 시켜놓았다.
- 계층화: Network(24 bits) + Host(8bits)
    - 앞부분을 네트워크 id, 혹은 prefix, subnet id 등으로 부른다.
    - 서브넷 마스크: 어디까지가 네트워크 id인지를 나타낸것
    - ip주소와 서브넷마스크는 항상 같이 다닌다. 서브넷 마스크로 네트워크의 크기를 알 수 있다.
    - 같은 prefix를 가진 host끼리 묶이므로 포워딩 테이블이 단순해진다.

classful addresing (과거에 ip 주소 지정방식)

- 네트워크는 자기 자신의 prefix를 가져야하며 각기 크기가 다르다.
- 예전에는 class를 통해 prefix를 배정했음
- class A /8
- class B /16
- class C /24
- class가 너무 비효율적이어서 classless가 등장

Classless Inter-Domain Routing (CIDR)

- 이 도입으로 포워딩 테이블이 단순화됨
- 32비트 공간. prefix는 네트워크에 따라 유연하게 조절 가능

Longest Prefix Match Forwarding

- 라우터는 매칭되는 가장 긴 prefix를 찾는다
- 가장 구체적으로 매칭되는 것을 찾는다. prefix 크기가 가장 큰 것을 찾는다.

subnet

- 같은 prefix를 가진 디바이스 인터페이스의 집합
- 라우터 거치지 않고 접근 가능한 호스트의 집합
- 라우터도 ip 주소를 가지며 더 많이 가지며 prefix가 다 다르다. 라우터는 여러개 서브넷에 속한다. 따라서 이 교집합을 통해서만 다른 서브넷으로 갈 수 있다.

IPv4

- 32비트, 네트워크+호스트
- 2^32 hosts(around 40억) 지원 가능
- 현재는 IPv4를 쓰고 있음
    - how? → NAT를 이용

IPv6

- 128비트로 주소공간을 늘렸다.
- 2^128 hosts

NAT(Network Address Translation)

- NAT 주소로 바깥으로 보낼때 NAT Gateway의 IP주소를 바꿔준다.
- 패킷이 외부로 나가면 안된다. 따라서 nat에서 소스 IP와 소스 포트까지 바꿔준다. 이 해당 정보를 NAT translation table에 저장한다.
- NAT로 외부에서 들어올때는 포트로만 찾는다.?
- NAT 내부에서는 서버를 이용할 수 없다.
