## overview

### application layer

- http
    - tcp를 이용하기 때문에 reliable
    - 종류
        - non-persistent HTTP
        - persistent HTTP
        - tcp를 재사용 하느냐 안하느냐 차이
- sample problem
    - tcp 3 way handshake으로 connection 만든다
        - tcp thin packet
        - thin ack
        - http request (데이터를 담고 있다)

### transport layer

udp

- error detection 등과 같은 기본적인 기능은 해준다
- protocol
    - DNS (왜 udp를 사용할까)
    - SNMP

reliable data transfer

- 패킷 에러→ 에러 디텍션, 에러 피드백, 패킷 재전송, 시퀀스넘버
- 패킷 로스 → 타임아웃, 패킷 재전송

go-back-N

- 장점: 동작 단순, 타이머가 하나밖에 없기 때문에
- 단점: 패킷 에러나 로스가 나면 오버헤드가 크다

selective repeat

- 장점: 오버헤드가 적다
- 단점: 유실된 패킷만 재전송하므로 구현이 복잡

tcp

- point to point 프로토콜
- 파이프라인 방식
- 양쪽에 send buffer receive buffer 생성
- ack: cumulative ack
- 패킷 유실일어났을때 타이머만 가지고 하기에는 오래걸림 → fast retransmit 등장
- fast retransmit: 여러개가 들어온다면 유실됐다고 생각

flow control

- receiver의 buffer size에 맞게 보내주는 것, 버퍼사이즈의 상황을 계속 피드백을 보내준다

congestion control

- 네트워크 상황에 맞춰 window size를 조절
- tcp tahoe vs tcp reno
    - window size 1이라는 뜻은 이 단위는 mss이다

## Network layer

- 라우터에서 하는일
    - 패킷의 목적지는 헤더에 적혀있을 것이다.
    - 포워딩: 라우터의 테이블에서 어떤 곳으로 패킷을 보낼지 결정, 이 때 이 테이블을 포워딩 테이블이라고 부른다
    - 라우팅: 포워딩 테이블을 만드는 것, 이 때 쓰인 알고리즘을 라우팅 알고리즘이라고 부름
    - 주소 범위로 포워딩 테이블이 관리된다. 매칭이 여러게 될 때는 가장 긴것을 매칭한다 **(= Longest prefix matching)**
