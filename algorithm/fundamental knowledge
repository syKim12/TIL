Queue: 선입선출, 먼저 들어온 것이 먼저 나간다 -> bfs에서 활용
Stack: 나중에 들어온 것이 먼저 나간다 -> dfs에서 활용

Divide and Conquer:
non-overlapping한 문제를 작은 문제로 쪼개어 해결

Dynamic Programming:
overlapping substructure를 갖는 문제 해결
재귀적 관계, 점화식을 이용한다.
예시: 최적화 이분탐색, 이항계수 구하디, floyd-warshall

Greedy:
현재 상황에서 가장 좋아보이는 것을 선택
예시: 다익스트라, 크루스칼

Quick sort:
시간복잡도: O(NlogN)
기준 데이터를 설정하고 그 기준보다 큰 데이터와 작은 데이터의 위치를 바꾸는 방법

이진탐색:
시작점 중간점 끝점을 설정하고, 중간점보다 작은지 큰지를 판단하며 탐색해나간다

floyd-warshall:
dp의 한 형태로, 시간복잡도가 크다.

다익스트라:
방문하지 않은 노드 중 가장 최단거리가 짧은 노드를 선택.
우선순위 큐를 이용함

크루스칼:
최소비용의 산장트리를 찾는 알고리즘
그리디 알고리즘의 일종

신장트리:
하나의 그래프가 있을 때 모든 노드를 포함하는 부분 그래프

위상정렬:
모든 노드를 순서대로 나열하는 정렬 기법

