데드락: 두 개 이상의 프로세스나 스레드가 서로 자원을 얻지 못해 무한정으로 기다리게 되는 상태
발생조건
- 상호 배제: 자원은 한번에 한 프로세스만 사용할 수 있다, 여러 프로세스 중 하나만 critical section에 진입가능할때
- 점유 대기: 프로세스 하나가 리소르를 잡고 있고, 다른 것은 대기 중일 때
- 비선점: 다른 프로세스에 할당된 자원은 사용이 끝날 때 까지 강제로 뺏을 수 없다
- 순환대기: 프로세스가 순환적으로 서로를 기다릴 때

교착 상태 예방: 고착 상태 발생 조건 중 하나를 제거하면서 해결, 자원 낭비가 심하다
- 상호 배제 부정: 여러 프로세스가 공유 자원을 사용
- 점유 대기 부정: 프로세스 실행 전 모든 자원 할당
- 비선점 부정: 프로세스가 다른 리소스 요청했을 때 즉시 리소스 사용할 수 없다면 점유하고 있던 리소스 반납
- 순환대기 부정: 프로세스마다 일대일 함수로 순서 지정

교착 상태 회피
- 데드락이 발생할 것 같을 때는 리소스를 할당 x
- 은행원 알고리즘: 프로세스가 리소스를 요청할 때마다 수행되며 만약 리소스를 할당 했을 때 데드락이 발생하는지 시뮬레이션을 돌린다

