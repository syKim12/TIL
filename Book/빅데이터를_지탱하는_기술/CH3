구조화 데이터: 스키마가 명확하게 정의된 데이터
- 스키마: 테이블의 칼럼 명과 데이터형, 테이블 간의 관계

스키마리스 데이터: 기본 서식은 있지만 스키마가 정의 안됨
- 스키마리스 데이터: CSV, JSON, XML 등의 데이터는 서식은 정해져 있지만, 칼럼수와 데이터 형은 명확하지 않다.

데이터 구조화의 파이프라인
- 분산 스토리지에 수집된 데이터는 명확한 스키마를 가지고 있지 않기도 하므로 SQL로 집계할 수 없다
- 따라서 먼저 스키마를 명확하게 한 테이블 형식의 '구조화 데이터'로 변환하는 것
- 일반적으로 구조화 데이터는 데이터의 압축률을 높이기 위해 열 지향 스토리지로 저장

열 지향 스토리지의 작성
- MPP 데이터베이스는 사용자가 상세를 몰라도 괜찮지만, Hadoop에서는 사용자가 직접 열지향 스토리지 형식을 선택하고 원하는 쿼리 엔진에서 집계 가능
- Apache Parquet: 스키마리스에 가까운 데이터 구조로 되어있어 JSON 같은 데이터도 저장 가능

분산 시스템의 구성요소
- 분산 파일 시스템: HDFS
- 리소스 관리자: YARN
- 분산 데이터 처리: MapReduce

HDFS와 YARN
- HDFS: Hadoop에서 처리되는 데이터 대부분은 분산 파일 시스템은 HDFS에 저장
  - 분산 시스템의 스토리지를 관리하여 데이터가 항상 여러 컴퓨터에 복사되도록 함
- YARN: CPU나 메모리 등의 계산 리소스는 리소스 매니저인 YARN에서 관리
  - YARN은 애플리케이션이 사용하는 CPU 코어와 메모리를 '컨테이너'라고 불리는 단위로 관리
  - Hadoop에서 분산 애플리케이션을 실행하면 YARN이 클러스터 전체의 부하를 보고 비어있는 호스트부터 컨테이너를 할당
  - 중요하지 않은 배치 처리에는 낮은 우선 순위를 부여함으로써 아무도 리소스를 사용하지 않을 경우에만 실행되도록 한다. 우선되는 작업부터 실행함으로써 한정된 뢰소슬르 낭비없이 활용하면서 데이터 처리 가능
  - cf) YARN의 컨테이너는 도커 처럼 OS 수준의 가상화 기술이 아닌 어떤 호스트에서 어떤 프로세스를 실행시킬지 결정하는 애플리케이션 수준의 기술

MapReduce와 Hive
- MapReduce: YARN상에서 동작하는 분산 애플리케이션 중 하나이며, 분산 시스템에서 데이터 처리를 실행하는데 사용
  - 임의의 자바 프로그램을 실행시킬 수 있기 때문에 비구조화 데이터를 가공하는데 적합
- Hive: 데이터 집계를 위해 설계된 쿼리 엔진
